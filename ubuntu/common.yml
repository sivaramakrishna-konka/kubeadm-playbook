---
- name: Install Dependencies on All Nodes
  hosts: all
  become: yes
  tasks:
    - name: Load required kernel modules
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl parameters for Kubernetes
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Apply sysctl settings
      command: sysctl --system

    - name: Install prerequisites
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install containerd
      apt:
        name: containerd.io
        state: present
        update_cache: yes

    - name: Generate default containerd config
      command: containerd config default
      register: containerd_config

    - name: Save containerd config
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"

    - name: Enable SystemdCgroup in containerd
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Restart and enable containerd service
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Remove old Kubernetes keyring file (if exists)
      ansible.builtin.file:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: absent

    - name: Create directory for Kubernetes keyring
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download and add Kubernetes repository key
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Remove old Kubernetes repository files (if exists)
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent

    - name: Add Kubernetes repository
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
        mode: '0644'

    - name: Update APT package list again
      ansible.builtin.apt:
        update_cache: yes

    - name: Install kubeadm, kubelet, and kubectl
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable and start kubelet service
      service:
        name: kubelet
        state: started
        enabled: yes

    - name: Hold Kubernetes packages to prevent automatic upgrades
      ansible.builtin.command: apt-mark hold kubelet kubeadm kubectl